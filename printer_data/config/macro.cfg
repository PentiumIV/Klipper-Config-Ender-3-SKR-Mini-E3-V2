[exclude_object]

# START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0} AREA_START=%MINX%,%MINY% AREA_END=%MAXX%,%MAXY% FILAMENT_TYPE={material_type}

[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    G28
    M104 S{EXTRUDER_TEMP-20}
    BED_MESH_CALIBRATE
    Smart_Park
    M109 S{EXTRUDER_TEMP}
    LINE_PURGE

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-5 F300
    # Raise nozzle by 10mm
    G1 Z10 F500
    G90
    G1 X0 Y225;Present print
    # Disable steppers
    M84
    M300

# M600: Filament Change
[gcode_macro M600]
gcode:
  {% set E = params.E|default(-45)|int %}
  {% set tool = params.tool|default(0)|int %}
  PAUSE
  G90
  G0 E5 F500 ;extrude filament to get better blob on end
  G0 E{E} F600 ;retract additional filament to move out of melt zone
  G92 E0
  M300

# Used for beep tones
[gcode_macro M300]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
    {% endfor %}

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}
    
[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x %}
        {% if x_min < 0 %}
            {% set x_min = 0 %}
        {% endif %}
    
        {% set y_min = printer.toolhead.axis_minimum.y %}
        {% if y_min < 0 %}
            {% set y_min = 0 %}
        {% endif %}
    
        {% set x_min = x_min + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = y_min + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

[gcode_macro Song_Naruto]
gcode:
  M300 DUR311 FREQ659
  M300 DUR151 FREQ247
  M300 DUR60 FREQ247
  M300 DUR91 FREQ0
  M300 DUR56 FREQ247
  M300 DUR91 FREQ0
  M300 DUR61 FREQ247
  M300 DUR91 FREQ0
  M300 DUR264 FREQ659
  M300 DUR35 FREQ0
  M300 DUR150 FREQ740
  M300 DUR60 FREQ247
  M300 DUR91 FREQ0
  M300 DUR147 FREQ784
  M300 DUR60 FREQ247
  M300 DUR92 FREQ0
  M300 DUR309 FREQ740
  M300 DUR151 FREQ220
  M300 DUR60 FREQ220
  M300 DUR91 FREQ0
  M300 DUR56 FREQ220
  M300 DUR91 FREQ0
  M300 DUR61 FREQ220
  M300 DUR91 FREQ0
  M300 DUR299 FREQ587
  M300 DUR150 FREQ220
  M300 DUR60 FREQ220
  M300 DUR91 FREQ0
  M300 DUR56 FREQ220
  M300 DUR91 FREQ0
  M300 DUR60 FREQ220
  M300 DUR92 FREQ0
  M300 DUR309 FREQ659
  M300 DUR151 FREQ247
  M300 DUR60 FREQ247
  M300 DUR91 FREQ0
  M300 DUR56 FREQ247
  M300 DUR91 FREQ0
  M300 DUR61 FREQ247
  M300 DUR91 FREQ0
  M300 DUR264 FREQ659
  M300 DUR30 FREQ0
  M300 DUR155 FREQ740
  M300 DUR60 FREQ247
  M300 DUR91 FREQ0
  M300 DUR147 FREQ784
  M300 DUR60 FREQ247
  M300 DUR90 FREQ0
  M300 DUR311 FREQ880
  M300 DUR151 FREQ220
  M300 DUR60 FREQ220
  M300 DUR91 FREQ0
  M300 DUR56 FREQ220
  M300 DUR91 FREQ0
  M300 DUR61 FREQ220
  M300 DUR84 FREQ0
  M300 DUR302 FREQ220
  M300 DUR155 FREQ220
  M300 DUR60 FREQ220
  M300 DUR87 FREQ0
  M300 DUR60 FREQ220
  M300 DUR91 FREQ0
  M300 DUR60 FREQ220
  M300 DUR90 FREQ0
  M300 DUR82 FREQ659
  M300 DUR229 FREQ1047
  M300 DUR151 FREQ196
  M300 DUR60 FREQ196
  M300 DUR91 FREQ0
  M300 DUR56 FREQ196
  M300 DUR91 FREQ0
  M300 DUR61 FREQ196
  M300 DUR84 FREQ0
  M300 DUR271 FREQ1047
  M300 DUR30 FREQ0
  M300 DUR155 FREQ1175
  M300 DUR60 FREQ196
  M300 DUR87 FREQ0
  M300 DUR151 FREQ1047
  M300 DUR60 FREQ196
  M300 DUR90 FREQ0
  M300 DUR311 FREQ988
  M300 DUR151 FREQ220
  M300 DUR60 FREQ220
  M300 DUR91 FREQ0
  M300 DUR113 FREQ880
  M300 DUR34 FREQ0
  M300 DUR118 FREQ784
  M300 DUR34 FREQ0
  M300 DUR264 FREQ740
  M300 DUR30 FREQ0
  M300 DUR153 FREQ784
  M300 DUR149 FREQ82
  M300 DUR267 FREQ880
  M300 DUR34 FREQ0
  M300 DUR163 FREQ988
  M300 DUR148 FREQ82
  M300 DUR151 FREQ82
  M300 DUR151 FREQ98
  M300 DUR147 FREQ92